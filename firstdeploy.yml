name: Deploy to AWS EC2

on:
  push:
    branches:
      - main
      - master 

env:
  AWS_REGION: "eu-north-1"
  AWS_ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}
  AWS_ECR_REPOSITORY_NAME: ${{ secrets.AWS_ECR_REPOSITORY_NAME }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Step 3: Login to AWS ECR
      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Step 4: Build and Push Docker Image to ECR
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.AWS_ECR_REPOSITORY }}/${{ env.AWS_ECR_REPOSITORY_NAME }}:${{ github.sha }}

  deploy-to-ec2:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      # Step 5: Deploy to EC2 over SSH
      - name: Deploy to EC2 ðŸš€
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e

            # Export new Docker tag
            export IMAGE_TAG=${{ github.sha }}

            # Login to ECR on the EC2 instance
            aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.AWS_ECR_REPOSITORY }}

            # Navigate to app directory
            cd ~/my-app

            # Stop and remove old container
            docker compose down -v --remove-orphans

            # Pull the latest Docker image
            docker compose pull api

            # Start the new container
            docker compose up -d --force-recreate api

            # Clean up old Docker images
            docker image prune -af
